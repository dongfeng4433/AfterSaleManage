spring.datasource.driver_class_name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.driver-class-name2=oracle.jdbc.driver.OracleDriver
spring.datasource.dbname2=robot_base_demo
spring.datasource.url2=jdbc:oracle:thin:@localhost:1521/orc1
spring.datasource.username2=qxzf123
spring.datasource.password2=qxzf123

#本地开发
spring.datasource.url=jdbc:mysql://localhost:3306/after_sale_manage?characterEncoding=utf8&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=zhusa

#发布服务器（服务器本地地址）
#spring.datasource.url=jdbc:mysql://localhost:3306/jdwechat?characterEncoding=utf8
#spring.datasource.username=root
#spring.datasource.password=root


# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
spring.datasource.logSlowSql=true
